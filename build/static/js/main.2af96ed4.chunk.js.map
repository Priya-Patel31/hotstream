{"version":3,"sources":["pages/home/components/sidebar/Sidebar.js","pages/home/Home.js","pages/home/components/heroSection/HeroSection.js","context/explore/exploreReducer.js","shared/utils/fetchApi.js","services/explore_services.js","context/explore/ExploreContext.js","shared/components/dropDown/Dropdown.js","shared/components/videoCard/VideoCard.js","pages/explore/components/filter/Filter.js","pages/explore/explore.js","shared/components/header/Header.js","shared/components/withHeader/WithHeader.js","mockMan.js","App.js","backend/utils/authUtils.js","backend/controllers/AuthController.js","backend/controllers/HistoryController.js","backend/controllers/VideoController.js","backend/db/videos.js","backend/db/categories.js","backend/controllers/CategoryController.js","backend/controllers/LikeController.js","backend/controllers/PlaylistController.js","backend/db/users.js","server.js","index.js"],"names":["Sidebar","getClassName","state","isActive","className","to","Home","HeroSection","navigate","useNavigate","src","alt","onClick","reducer","action","type","videos","payload","categories","selectedCategory","categoryName","selectedDropdownId","id","fetchApi","a","url","method","body","propertyName","user","JSON","parse","localStorage","getItem","axios","data","headers","authorization","token","status","success","message","console","log","Error","fetchDataApi","success1","data2","success2","error","suceess","ExploreContext","createContext","ExploreContextProvider","children","useEffect","dispatch","useReducer","filteredVideos","filter","video","toLowerCase","getFilteredVideos","Provider","value","useExplore","useContext","DropDown","options","map","option","item","VideoCard","product","_id","title","description","creator","views","releaseDate","width","height","light","Filter","category","Explore","key","Header","placeholder","WithHeader","MockAPI","App","path","element","index","requiresAuth","request","encodedToken","requestHeaders","decodedToken","jwt_decode","process","this","db","users","findBy","email","Response","errors","formatDate","dayjs","format","sign","require","signupHandler","schema","requestBody","password","rest","uuid","newUser","createdAt","updatedAt","likes","history","playlists","createdUser","create","loginHandler","foundUser","undefined","getHistoryVideosHandler","call","addVideoToHistoryHandler","some","push","removeVideoFromHistoryHandler","videoId","params","filteredHistory","update","clearHistoryHandler","getAllVideosHandler","getVideoHandler","attrs","getAllCategoriesHandler","getCategoryHandler","categoryId","getLikedVideosHandler","addItemToLikedVideos","removeItemFromLikedVideos","filteredLikes","getAllPlaylistsHandler","addNewPlaylistHandler","playlist","removePlaylistHandler","playlistId","filteredPlaylists","getVideosFromPlaylistHandler","find","addVideoToPlaylistHandler","removeVideoFromPlaylistHandler","firstName","lastName","environment","Server","serializers","application","RestSerializer","models","Model","like","seeds","server","logging","forEach","routes","namespace","post","bind","get","delete","makeServer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2af96ed4.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {\r\n  FaHome,\r\n  MdExplore,\r\n  BsCollectionPlayFill,\r\n  AiFillLike,\r\n  AiOutlineHistory,\r\n} from \"../../../../assets/icons\";\r\nimport \"./sidebar.css\";\r\n\r\nexport const Sidebar = () => {\r\n  const getClassName = (state) => {\r\n    return state.isActive ? \"sidebar-item active\" : \"sidebar-item\";\r\n  };\r\n  return (\r\n    <ul className=\"sidebar-items  list-style-none\">\r\n      <NavLink to=\"/\" className={getClassName}>\r\n        <FaHome className=\"mr-1 sidebar-item-icon\" />\r\n        <span className=\"sidebar-content\">Home</span>\r\n      </NavLink>\r\n      <NavLink to=\"/explore\" className={getClassName}>\r\n        <MdExplore className=\"mr-1 sidebar-item-icon\" />\r\n        <span className=\"sidebar-content\">Explore</span>\r\n      </NavLink>\r\n      <NavLink to=\"/playlists\" className={getClassName}>\r\n        <BsCollectionPlayFill className=\"mr-1 sidebar-item-icon\" />\r\n        <span className=\"sidebar-content\">Playlists</span>\r\n      </NavLink>\r\n      <NavLink to=\"/like\" className={getClassName}>\r\n        <AiFillLike className=\"mr-1 sidebar-item-icon\" />\r\n        <span className=\"sidebar-content\">Like</span>\r\n      </NavLink>\r\n      <NavLink to=\"/history\" className={getClassName}>\r\n        <AiOutlineHistory className=\"mr-1 sidebar-item-icon\" />\r\n        <span className=\"sidebar-content\">History</span>\r\n      </NavLink>\r\n    </ul>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./home.css\";\r\nimport { Sidebar } from \"./components/sidebar/Sidebar\";\r\nimport { Outlet } from \"react-router\";\r\n\r\nexport const Home = () => {\r\n  return (\r\n    \r\n    <div className=\"home-container\">\r\n      <Sidebar />\r\n      <Outlet/>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./heroSection.css\";\r\nimport {useNavigate} from \"react-router-dom\"\r\nexport const HeroSection = () => {\r\n  const navigate = useNavigate();\r\n  return (\r\n    <div className=\"hero-section-container\">\r\n      <img\r\n        src=\"https://miro.medium.com/max/1400/1*5lyavS59mazOFnb55Z6znQ.png\"\r\n        alt=\"hero-img\"\r\n        className=\"hero-image\"\r\n      />\r\n      <div className=\"text-overlay-container\">\r\n        <h1 className=\"overlay-text\">\r\n          IT'S TIME TO <span className=\"explore-text\">EXPLORE</span> <br /> THE\r\n          WORLD\r\n        </h1>\r\n        <button className=\"button explore-btn\" onClick={() =>{navigate(\"/explore\")}}>Explore Now </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","export const reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"FETCH_DATA\":\r\n      return {\r\n        ...state,\r\n        videos: action.payload.videos,\r\n        categories: action.payload.categories,\r\n      };\r\n    case \"UPDATE_CATEGORY\":\r\n      return {\r\n        ...state,\r\n        selectedCategory: action.payload.categoryName,\r\n      };\r\n    case \"UPDATE_DROPDOWN\":\r\n      return {\r\n        ...state,\r\n        selectedDropdownId: action.payload.id,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import axios from \"axios\";\r\n\r\nexport async function fetchApi({ url, method, body, propertyName }) {\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n\r\n  try {\r\n    const { data, status} = await axios({\r\n      method,\r\n      url,\r\n      data: body,\r\n      headers: { authorization: user!== null ?user.token:\"\" },\r\n    });\r\n \r\n    if (status === 200 || status === 201) {\r\n      return {\r\n        data: data,\r\n        success: true,\r\n        message: `${propertyName} fetched successfully!!`,\r\n      };\r\n    } \r\n    console.log(data);\r\n    throw Error(\"API request failed\");\r\n  } catch (e) {\r\n    console.log(e);\r\n    return {\r\n      data: null,\r\n      success: false,\r\n      message: `${propertyName} failed to fetch`,\r\n    };\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n","import { fetchApi } from \"../shared/utils/fetchApi\";\r\n\r\nexport const fetchDataApi = async () => {\r\n  try {\r\n    const { data ,success:success1} = await fetchApi({\r\n      url: \"/api/videos\",\r\n      method: \"get\",\r\n      propertyName: \"videos\",\r\n    });\r\n\r\n   const{data:data2,success:success2} = await fetchApi({\r\n      url: \"/api/categories\",\r\n      method: \"get\",\r\n      propertyName: \"categories\",\r\n    });\r\n    if(success1 && success2){\r\n        return{\r\n            data:{\r\n                videos:data.videos,\r\n                categories:data2.categories\r\n            },success:true,\r\n            message:\"Data fetched successfully\"\r\n        }\r\n    }\r\n\r\n  } catch (e) {\r\n      console.error(e);\r\n      return{\r\n        data :null,\r\n        suceess:false,\r\n        message:\"Data failed to fetch\"\r\n      }\r\n  }\r\n \r\n\r\n};\r\n","import { createContext, useContext, useEffect, useReducer } from \"react\";\r\nimport { reducer } from \"./exploreReducer\";\r\nimport { fetchDataApi } from \"../../services/explore_services\";\r\n\r\nconst ExploreContext = createContext();\r\nconst ExploreContextProvider = ({ children }) => {\r\n  useEffect(() => {\r\n    (async function () {\r\n      const { data, success } = await fetchDataApi();\r\n      if (success) {\r\n        dispatch({\r\n          type: \"FETCH_DATA\",\r\n          payload: { videos: data.videos, categories: data.categories },\r\n        });\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  const intialState = {\r\n    videos: [],\r\n    categories: [],\r\n    selectedCategory: \"All\",\r\n    selectedDropdownId : null\r\n  };\r\n  const [{ videos, categories, selectedCategory,selectedDropdownId }, dispatch] = useReducer(\r\n    reducer,\r\n    intialState\r\n  );\r\n\r\n  const getFilteredVideos = (videos) => {\r\n    if (selectedCategory === \"All\") return videos;\r\n    return videos.filter((video) => {\r\n      return (\r\n        video.categoryName.toLowerCase() === selectedCategory.toLowerCase()\r\n      );\r\n    });\r\n  };\r\n  const filteredVideos = getFilteredVideos(videos);\r\n\r\n  return (\r\n    <ExploreContext.Provider\r\n      value={{ videos, categories, selectedCategory, dispatch, filteredVideos ,selectedDropdownId}}\r\n    >\r\n      {children}\r\n    </ExploreContext.Provider>\r\n  );\r\n};\r\nconst useExplore = () => {\r\n  return useContext(ExploreContext);\r\n};\r\nexport { ExploreContextProvider, useExplore };\r\n","import \"./dropDown.css\";\r\n\r\nexport const DropDown = ({ options, onClick }) => {\r\n  return (\r\n    <ul className=\"dropdown-container\">\r\n      {options.map((option) => (\r\n        <li\r\n          className=\"list-style-none dropdown-option\"\r\n          key={option.value}\r\n          onClick={() => {\r\n            onClick(option.value);\r\n          }}\r\n        >\r\n          {option.item}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport \"./videoCard.css\";\r\nimport {\r\n  BsThreeDotsVertical,\r\n  MdWatchLater,\r\n  BsCollectionPlayFill,\r\n} from \"../../../assets/icons\";\r\nimport { useExplore } from \"../../../context/explore/ExploreContext\";\r\nimport ReactPlayer from \"react-player\";\r\nimport { DropDown } from \"../dropDown/Dropdown\";\r\n\r\nexport const VideoCard = (product) => {\r\n  const { _id, title, description, creator, views, releaseDate } = product;\r\n\r\n  const options = [\r\n    {\r\n      item: (\r\n        <div>\r\n          <BsCollectionPlayFill className=\"mr-1\" /> Add to playlists\r\n        </div>\r\n      ),\r\n      value: \"playlist\",\r\n    },\r\n    {\r\n      item: (\r\n        <div>\r\n          <MdWatchLater className=\"mr-1\" /> Add to watch later\r\n        </div>\r\n      ),\r\n      value: \"watchLater\",\r\n    },\r\n  ];\r\n\r\n  const { selectedDropdownId, dispatch } = useExplore();\r\n  return (\r\n    <div className=\"video-card-container flex-col\">\r\n      <div className=\"video-wrapper\">\r\n        <ReactPlayer\r\n          className=\"react-player\"\r\n          url={`https://www.youtube.com/watch?v=${_id}`}\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n          light={false}\r\n        />\r\n\r\n        <div className=\"video-badge\">{views}M views</div>\r\n      </div>\r\n      <div className=\"p-2 content-container\">\r\n        <div className=\"flex-row justify-between\">\r\n          <h2 className=\"video-card-title font-semibold\">{title}</h2>\r\n          <BsThreeDotsVertical\r\n            className=\"three-dots-icon\"\r\n            onClick={() => {\r\n              dispatch({\r\n                type: \"UPDATE_DROPDOWN\",\r\n                payload: { id: _id === selectedDropdownId ? null : _id },\r\n              });\r\n            }}\r\n          />\r\n          {selectedDropdownId === _id && (\r\n            <DropDown\r\n              options={options}\r\n              onClick={(value) => {\r\n                console.log(value);\r\n                dispatch({ type: \"UPDATE_DROPDOWN\", payload: { id: null } });\r\n              }}\r\n            />\r\n          )}\r\n        </div>\r\n        <div className=\"flex-col\">\r\n          <p className=\"video-card-subtitle my-1 font-medium text-grey\">\r\n            {description}\r\n          </p>\r\n          <ul className=\"flex-row\">\r\n            <li className=\"video-creator list-style-none font-medium text-grey\">\r\n              {creator}\r\n            </li>\r\n            <li className=\"release-date font-medium text-grey\">\r\n              {releaseDate}\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./filter.css\";\r\nimport { useExplore } from \"../../../../context/explore/ExploreContext\";\r\n\r\nexport const Filter = () => {\r\n  const { categories, dispatch, selectedCategory } = useExplore();\r\n\r\n  return (\r\n    <div className=\"flex-row explore-list-items list-style-none\">\r\n      <button\r\n        className={`explore-list-item ${\r\n          selectedCategory.toLowerCase() === \"All\".toLowerCase() ? \"active\" : \"\"\r\n        }`}\r\n        onClick={() => {\r\n          dispatch({\r\n            type: \"UPDATE_CATEGORY\",\r\n            payload: { categoryName: \"All\" },\r\n          });\r\n        }}\r\n      >\r\n        All\r\n      </button>\r\n      {categories.map((category) => (\r\n        <button\r\n          className={`explore-list-item ${\r\n            selectedCategory.toLowerCase() ===\r\n            category.categoryName.toLowerCase()\r\n              ? \"active\"\r\n              : \"\"\r\n          }`}\r\n          key={category?._id}\r\n          onClick={() => {\r\n            dispatch({\r\n              type: \"UPDATE_CATEGORY\",\r\n              payload: { categoryName: category.categoryName },\r\n            });\r\n          }}\r\n        >\r\n          {category?.categoryName}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./explore.css\";\r\nimport { VideoCard } from \"../../shared/components/videoCard/VideoCard\";\r\nimport { Filter } from \"./components/filter/Filter\";\r\nimport {useExplore} from \"../../context/explore/ExploreContext\"\r\n\r\nexport const Explore = () => {\r\n    const {filteredVideos} = useExplore();\r\n  return (\r\n    <div className=\"explore-container\">\r\n      <div className=\"flex-col\">\r\n        <Filter />\r\n      </div>\r\n      <div className=\"flex-row flex-wrap gap-1 justify-center p-2\">\r\n        {filteredVideos.map((video) => (\r\n          <VideoCard {...video} key={video._id} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import \"./header.css\";\r\nimport { BsSearch } from \"../../../assets/icons\";\r\n\r\nexport const Header = () => {\r\n  return (\r\n    <nav className=\"header-container\">\r\n    \r\n      <div className=\"logo\">\r\n        <span className=\"logo-text1\">HOT</span>\r\n        <span className=\"logo-text2\">STREAM</span>\r\n      </div>\r\n      <form className=\"searchBar-container\">\r\n        <BsSearch className=\"search-icon\" />\r\n        <input\r\n          type=\"search\"\r\n          placeholder=\"Search Videos\"\r\n          className=\"search-input\"\r\n        />\r\n      </form>\r\n      <button className=\"login-button\">Login</button>\r\n    </nav>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Outlet } from \"react-router-dom\";\r\nimport {Header} from \"../header/Header\";\r\n\r\nexport const WithHeader = () => {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Outlet />\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport Mockman from \"mockman-js\";\r\nfunction MockAPI() {\r\n  return (\r\n    <div className=\"MockAPI\">\r\n      <Mockman />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MockAPI;","import \"./App.css\";\r\nimport { Home } from \"./pages/home/Home\";\r\nimport { HeroSection } from \"./pages/home/components/heroSection/HeroSection\";\r\nimport { Routes, Route } from \"react-router-dom\";\r\nimport { Explore } from \"./pages/explore/explore\";\r\nimport { WithHeader } from \"./shared/components/withHeader/WithHeader\";\r\nimport Mockman from \"./mockMan\";\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Routes>\r\n        <Route path=\"/\" element={<WithHeader />}>\r\n          <Route path=\"mockApi\" element={<Mockman />}></Route>\r\n          <Route path=\"/\" element={<Home />}>\r\n            <Route index element={<HeroSection />} />\r\n            <Route path=\"explore\" element={<Explore />} />\r\n          </Route>\r\n        </Route>\r\n      </Routes>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { Response } from \"miragejs\";\r\nimport dayjs from \"dayjs\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nexport const requiresAuth = function (request) {\r\n  const encodedToken = request.requestHeaders.authorization;\r\n  const decodedToken = jwt_decode(\r\n    encodedToken,\r\n    process.env.REACT_APP_JWT_SECRET\r\n  );\r\n  if (decodedToken) {\r\n    const user = this.db.users.findBy({ email: decodedToken.email });\r\n    return user;\r\n  }\r\n  return new Response(\r\n    401,\r\n    {},\r\n    { errors: [\"The token is invalid. Unauthorized access error.\"] }\r\n  );\r\n};\r\n\r\nexport const formatDate = () => dayjs().format(\"YYYY-MM-DDTHH:mm:ssZ\");\r\n","import { v4 as uuid } from \"uuid\";\r\nimport { Response } from \"miragejs\";\r\nimport { formatDate } from \"../utils/authUtils\";\r\nconst sign = require(\"jwt-encode\");\r\n/**\r\n * All the routes related to Auth are present here.\r\n * These are Publicly accessible routes.\r\n * */\r\n\r\n/**\r\n * This handler handles user signups.\r\n * send POST Request at /api/auth/signup\r\n * body contains {firstName, lastName, email, password}\r\n * */\r\n\r\nexport const signupHandler = function (schema, request) {\r\n  const { email, password, ...rest } = JSON.parse(request.requestBody);\r\n  try {\r\n    // check if email already exists\r\n    const foundUser = schema.users.findBy({ email });\r\n    if (foundUser) {\r\n      return new Response(\r\n        422,\r\n        {},\r\n        {\r\n          errors: [\"Unprocessable Entity. Email Already Exists.\"],\r\n        }\r\n      );\r\n    }\r\n    const _id = uuid();\r\n    const newUser = {\r\n      _id,\r\n      email,\r\n      password,\r\n      createdAt: formatDate(),\r\n      updatedAt: formatDate(),\r\n      ...rest,\r\n      likes: [],\r\n      history: [],\r\n      playlists: [],\r\n    };\r\n    const createdUser = schema.users.create(newUser);\r\n    const encodedToken = sign({ _id, email }, process.env.REACT_APP_JWT_SECRET);\r\n    return new Response(201, {}, { createdUser, encodedToken });\r\n  } catch (error) {\r\n    return new Response(\r\n      500,\r\n      {},\r\n      {\r\n        error,\r\n      }\r\n    );\r\n  }\r\n};\r\n\r\n/**\r\n * This handler handles user login.\r\n * send POST Request at /api/auth/login\r\n * body contains {email, password}\r\n * */\r\n\r\nexport const loginHandler = function (schema, request) {\r\n  const { email, password } = JSON.parse(request.requestBody);\r\n  try {\r\n    const foundUser = schema.users.findBy({ email });\r\n    if (!foundUser) {\r\n      return new Response(\r\n        404,\r\n        {},\r\n        { errors: [\"The email you entered is not Registered. Not Found error\"] }\r\n      );\r\n    }\r\n    if (password === foundUser.password) {\r\n      const encodedToken = sign(\r\n        { _id: foundUser._id, email },\r\n        process.env.REACT_APP_JWT_SECRET\r\n      );\r\n      foundUser.password = undefined;\r\n      return new Response(200, {}, { foundUser, encodedToken });\r\n    }\r\n    new Response(\r\n      401,\r\n      {},\r\n      {\r\n        errors: [\r\n          \"The credentials you entered are invalid. Unauthorized access error.\",\r\n        ],\r\n      }\r\n    );\r\n  } catch (error) {\r\n    return new Response(\r\n      500,\r\n      {},\r\n      {\r\n        error,\r\n      }\r\n    );\r\n  }\r\n};\r\n","import { Response } from \"miragejs\";\r\nimport { requiresAuth } from \"../utils/authUtils\";\r\n\r\n/**\r\n * All the routes related to User History are present here.\r\n * These are private routes.\r\n * Client needs to add \"authorization\" header with JWT token in it to access it.\r\n * */\r\n\r\n/**\r\n * This handler handles getting videos from user's history.\r\n * send GET Request at /api/user/history\r\n * */\r\nexport const getHistoryVideosHandler = function (schema, request) {\r\n  const user = requiresAuth.call(this, request);\r\n  try {\r\n    if (!user) {\r\n      new Response(\r\n        404,\r\n        {},\r\n        {\r\n          errors: [\"The email you entered is not Registered. Not Found error\"],\r\n        }\r\n      );\r\n    }\r\n    return new Response(200, {}, { history: user.history });\r\n  } catch (error) {\r\n    return new Response(\r\n      500,\r\n      {},\r\n      {\r\n        error,\r\n      }\r\n    );\r\n  }\r\n};\r\n\r\n/**\r\n * This handler handles adding videos to user's history.\r\n * send POST Request at /api/user/history\r\n * body contains {video}\r\n * */\r\n\r\nexport const addVideoToHistoryHandler = function (schema, request) {\r\n  const user = requiresAuth.call(this, request);\r\n  try {\r\n    if (!user) {\r\n      return new Response(\r\n        404,\r\n        {},\r\n        {\r\n          errors: [\"The email you entered is not Registered. Not Found error\"],\r\n        }\r\n      );\r\n    }\r\n    const { video } = JSON.parse(request.requestBody);\r\n    if (user.history.some((item) => item.id === video.id)) {\r\n      return new Response(\r\n        409,\r\n        {},\r\n        {\r\n          errors: [\"The video is already in your history\"],\r\n        }\r\n      );\r\n    }\r\n    user.history.push(video);\r\n    return new Response(201, {}, { history: user.history });\r\n  } catch (error) {\r\n    return new Response(\r\n      500,\r\n      {},\r\n      {\r\n        error,\r\n      }\r\n    );\r\n  }\r\n};\r\n\r\n/**\r\n * This handler handles removing videos from user's history.\r\n * send DELETE Request at /api/user/history/:videoId\r\n * */\r\n\r\nexport const removeVideoFromHistoryHandler = function (schema, request) {\r\n  const user = requiresAuth.call(this, request);\r\n  try {\r\n    if (!user) {\r\n      return new Response(\r\n        404,\r\n        {},\r\n        {\r\n          errors: [\"The email you entered is not Registered. Not Found error\"],\r\n        }\r\n      );\r\n    }\r\n    const videoId = request.params.videoId;\r\n    const filteredHistory = user.history.filter((item) => item._id !== videoId);\r\n    this.db.users.update({ history: filteredHistory });\r\n    return new Response(200, {}, { history: filteredHistory });\r\n  } catch (error) {\r\n    return new Response(\r\n      500,\r\n      {},\r\n      {\r\n        error,\r\n      }\r\n    );\r\n  }\r\n};\r\n\r\n/**\r\n * This handler handles removing videos from user's history.\r\n * send DELETE Request at /api/user/history/all\r\n * */\r\n\r\nexport const clearHistoryHandler = function (schema, request) {\r\n  const user = requiresAuth.call(this, request);\r\n  try {\r\n    if (!user) {\r\n      return new Response(\r\n        404,\r\n        {},\r\n        {\r\n          errors: [\"The email you entered is not Registered. Not Found error\"],\r\n        }\r\n      );\r\n    }\r\n    this.db.users.update({ history: [] });\r\n    return new Response(200, {}, { history: [] });\r\n  } catch (error) {\r\n    return new Response(\r\n      500,\r\n      {},\r\n      {\r\n        error,\r\n      }\r\n    );\r\n  }\r\n};\r\n","import { Response } from \"miragejs\";\r\n\r\n/**\r\n * All the routes related to Videos are present here.\r\n * These are Publicly accessible routes.\r\n * */\r\n\r\n/**\r\n * This handler handles gets all videos in the db.\r\n * send GET Request at /api/videos\r\n * */\r\n\r\nexport const getAllVideosHandler = function () {\r\n  try {\r\n    return new Response(200, {}, { videos: this.db.videos });\r\n  } catch (error) {\r\n    return new Response(\r\n      500,\r\n      {},\r\n      {\r\n        error,\r\n      }\r\n    );\r\n  }\r\n};\r\n\r\n/**\r\n * This handler handles uploads a new video to the db.\r\n * send POST Request at /api/user/videos/\r\n * */\r\n\r\n// TODO: postVideoHandler\r\n\r\n/**\r\n * This handler handles gets all videos in the db.\r\n * send GET Request at /api/user/videos/:videoId\r\n * */\r\n\r\nexport const getVideoHandler = function (schema, request) {\r\n  const { videoId } = request.params;\r\n  try {\r\n    const video = schema.videos.findBy({ _id: videoId }).attrs;\r\n    return new Response(200, {}, { video });\r\n  } catch (error) {\r\n    return new Response(\r\n      500,\r\n      {},\r\n      {\r\n        error,\r\n      }\r\n    );\r\n  }\r\n};\r\n","/**\r\n * Videos Database can be added here.\r\n * You can add videos of your wish with different attributes\r\n * */\r\n\r\nexport const videos = [\r\n  {\r\n    _id: \"A30IuIjQYYg\",\r\n    title: \"Thailand - Cinematic Travel\",\r\n    description: \"Land of incredible stories.\",\r\n    creator: \"Benn TK\",\r\n    categoryName: \"country\",\r\n    views: \"290\",\r\n    releaseDate: \"Aug 28 2018\",\r\n  },\r\n  {\r\n    _id: \"DIgv-e18OzA\",\r\n    title: \"Vietnam - Cinematic Travel\",\r\n    description: \"Land of ancient secrets\",\r\n    creator: \"Benn TK\",\r\n    categoryName: \"city\",\r\n    views: \"110\",\r\n    releaseDate: \"Sept 12 2021\",\r\n  },\r\n  {\r\n    _id: \"oM_9lF4u4_o\",\r\n    title: \"Kedarnath Yatra 2020\",\r\n    description: \"Sonprayag to Kedarnath Temple, 16km Trekking\",\r\n    creator: \"Naveen Rawat\",\r\n    categoryName: \"state\",\r\n    views: \"1\",\r\n    releaseDate: \"Nov 10 2011\",\r\n  },\r\n  {\r\n    _id: \"ssYuPTdMt8A\",\r\n    title: \"Visit in Gibhi\",\r\n    description: \"10 Beautiful Tourist categoryNames to Visit in Jibhi\",\r\n    creator: \"Walking wanderer\",\r\n    categoryName: \"village\",\r\n    views: \"2\",\r\n    releaseDate: \"Dec 19 2013\",\r\n  },\r\n  {\r\n    _id: \"2YlOJiEUVOY&t=5s\",\r\n    title: \"Tirthan Valley\",\r\n    description: \"Travel Guide 2020 | Trek\",\r\n    creator: \"Abhimanyu Dalal\",\r\n    categoryName: \"town\",\r\n    views: \"210\",\r\n    releaseDate: \"Dec 9 2017\",\r\n  },\r\n  {\r\n    _id: \"AotsXapzQyU\",\r\n    title: \"Shimla Kufri\",\r\n    description: \"Travel to Kufri\",\r\n    creator: \"Modern banjare\",\r\n    categoryName: \"city\",\r\n    views: \"230\",\r\n    releaseDate: \"Apr 13 2012\",\r\n  },\r\n  {\r\n    _id: \"hn6-k3bLcaE\",\r\n    title: \"KOLKATA - FROM THE SKY\",\r\n    description: \"DRONE FOOTAGE || DJI MAVIC MINI\",\r\n    creator: \"Take a tour\",\r\n    categoryName: \"city\",\r\n    views: \"4\",\r\n    releaseDate: \"Jan 28 2017\",\r\n  },\r\n  {\r\n    _id: \"vydEu1I9r5c\",\r\n    title: \"Ladakh\",\r\n    description: \"Pangong Lake | Nubra Valley\",\r\n    creator: \"Garima's good life\",\r\n    categoryName: \"union territory\",\r\n    views: \"4\",\r\n    releaseDate: \"Jan 14 2010\",\r\n  },\r\n  {\r\n    _id: \"qi52KQs67MY\",\r\n    title: \"Philippines\",\r\n    description: \"Land of enchanted Islands | Epic Travel Cinematic\",\r\n    creator: \"Benn TK\",\r\n    categoryName: \"country\",\r\n    views: \"10\",\r\n    releaseDate: \"Mar 24 2015\",\r\n  },];\r\n","import { v4 as uuid } from \"uuid\";\r\n\r\n/**\r\n * Category Database can be added here.\r\n * You can add category of your wish with different attributes\r\n * */\r\n\r\nexport const categories = [\r\n  {\r\n    _id: uuid(),\r\n    categoryName: \"State\",\r\n    },\r\n  {\r\n    _id: uuid(),\r\n    categoryName: \"Country\",\r\n    },\r\n  {\r\n    _id: uuid(),\r\n    categoryName: \"Town\",\r\n  },\r\n  {\r\n    _id: uuid(),\r\n    categoryName: \"Union Territory\",\r\n  },\r\n  {\r\n    _id: uuid(),\r\n    categoryName: \"City\",\r\n  },\r\n];\r\n","import { Response } from \"miragejs\";\r\n/**\r\n * All the routes related to Category are present here.\r\n * These are Publicly accessible routes.\r\n * */\r\n\r\n/**\r\n * This handler handles gets all categories in the db.\r\n * send GET Request at /api/categories\r\n * */\r\n\r\nexport const getAllCategoriesHandler = function () {\r\n  try {\r\n    return new Response(200, {}, { categories: this.db.categories });\r\n  } catch (error) {\r\n    return new Response(\r\n      500,\r\n      {},\r\n      {\r\n        error,\r\n      }\r\n    );\r\n  }\r\n};\r\n\r\n/**\r\n * This handler handles gets all categories in the db.\r\n * send GET Request at /api/user/category/:categoryId\r\n * */\r\n\r\nexport const getCategoryHandler = function (schema, request) {\r\n  const { categoryId } = request.params;\r\n  try {\r\n    const category = schema.categories.findBy({ _id: categoryId }).attrs;\r\n    return new Response(200, {}, { category });\r\n  } catch (error) {\r\n    return new Response(\r\n      500,\r\n      {},\r\n      {\r\n        error,\r\n      }\r\n    );\r\n  }\r\n};\r\n","import { Response } from \"miragejs\";\r\nimport { requiresAuth } from \"../utils/authUtils\";\r\n\r\n/**\r\n * All the routes related to Liked Videos are present here.\r\n * These are private routes.\r\n * Client needs to add \"authorization\" header with JWT token in it to access it.\r\n * */\r\n\r\n/**\r\n * This handler handles getting videos from user's likes.\r\n * send GET Request at /api/user/likes\r\n * */\r\nexport const getLikedVideosHandler = function (schema, request) {\r\n  const user = requiresAuth.call(this, request);\r\n  try {\r\n    if (!user) {\r\n      return new Response(\r\n        404,\r\n        {},\r\n        {\r\n          errors: [\"The email you entered is not Registered. Not Found error\"],\r\n        }\r\n      );\r\n    }\r\n    return new Response(200, {}, { likes: user.likes });\r\n  } catch (error) {\r\n    return new Response(\r\n      500,\r\n      {},\r\n      {\r\n        error,\r\n      }\r\n    );\r\n  }\r\n};\r\n\r\n/**\r\n * This handler handles adding videos to user's likes.\r\n * send POST Request at /api/user/likes\r\n * body contains {video}\r\n * */\r\n\r\nexport const addItemToLikedVideos = function (schema, request) {\r\n  const user = requiresAuth.call(this, request);\r\n  if (user) {\r\n    const { video } = JSON.parse(request.requestBody);\r\n    if (user.likes.some((item) => item.id === video.id)) {\r\n      return new Response(\r\n        409,\r\n        {},\r\n        {\r\n          errors: [\"The video is already in your liked videos\"],\r\n        }\r\n      );\r\n    }\r\n    user.likes.push(video);\r\n    return new Response(201, {}, { likes: user.likes });\r\n  }\r\n  return new Response(\r\n    404,\r\n    {},\r\n    {\r\n      errors: [\"The email you entered is not Registered. Not Found error\"],\r\n    }\r\n  );\r\n};\r\n\r\n/**\r\n * This handler handles removing videos from user's likes.\r\n * send DELETE Request at /api/user/likes/:videoId\r\n * */\r\n\r\nexport const removeItemFromLikedVideos = function (schema, request) {\r\n  const user = requiresAuth.call(this, request);\r\n  if (user) {\r\n    const videoId = request.params.videoId;\r\n    const filteredLikes = user.likes.filter((item) => item._id !== videoId);\r\n    this.db.users.update({ likes: filteredLikes });\r\n    return new Response(200, {}, { likes: filteredLikes });\r\n  }\r\n  return new Response(\r\n    404,\r\n    {},\r\n    { errors: [\"The user you request does not exist. Not Found error.\"] }\r\n  );\r\n};\r\n","import { Response } from \"miragejs\";\r\nimport { requiresAuth } from \"../utils/authUtils\";\r\nimport { v4 as uuid } from \"uuid\";\r\n\r\n/**\r\n * All the routes related to User Playlists are present here.\r\n * These are private routes.\r\n * Client needs to add \"authorization\" header with JWT token in it to access it.\r\n * */\r\n\r\n/**\r\n * This handler handles getting all user's playlists.\r\n * send GET Request at /api/user/playlist\r\n * */\r\nexport const getAllPlaylistsHandler = function (schema, request) {\r\n  const user = requiresAuth.call(this, request);\r\n  try {\r\n    if (!user) {\r\n      return new Response(\r\n        404,\r\n        {},\r\n        {\r\n          errors: [\"The email you entered is not Registered. Not Found error\"],\r\n        }\r\n      );\r\n    }\r\n    return new Response(200, {}, { playlists: user.playlists });\r\n  } catch (error) {\r\n    return new Response(\r\n      500,\r\n      {},\r\n      {\r\n        error,\r\n      }\r\n    );\r\n  }\r\n};\r\n\r\n/**\r\n * This handler handles adding playlist to user's playlists.\r\n * send POST Request at /api/user/playlists\r\n * body contains {playlist: {title: \"foo\", description:\"bar bar bar\" }}\r\n * */\r\n\r\nexport const addNewPlaylistHandler = function (schema, request) {\r\n  const user = requiresAuth.call(this, request);\r\n  if (user) {\r\n    const { playlist } = JSON.parse(request.requestBody);\r\n    user.playlists.push({ ...playlist, videos: [], _id: uuid() });\r\n    return new Response(201, {}, { playlists: user.playlists });\r\n  }\r\n  return new Response(\r\n    404,\r\n    {},\r\n    {\r\n      errors: [\"The email you entered is not Registered. Not Found error\"],\r\n    }\r\n  );\r\n};\r\n\r\n/**\r\n * This handler handles removing videos from user's playlists.\r\n * send DELETE Request at /api/user/playlists/:playlistId\r\n * */\r\n\r\nexport const removePlaylistHandler = function (schema, request) {\r\n  const user = requiresAuth.call(this, request);\r\n  if (user) {\r\n    const playlistId = request.params.playlistId;\r\n    const filteredPlaylists = user.playlists.filter(\r\n      (item) => item._id !== playlistId\r\n    );\r\n    this.db.users.update({ playlists: filteredPlaylists });\r\n    return new Response(200, {}, { playlists: filteredPlaylists });\r\n  }\r\n  return new Response(\r\n    404,\r\n    {},\r\n    { errors: [\"The user you request does not exist. Not Found error.\"] }\r\n  );\r\n};\r\n\r\n/**\r\n * This handler handles getting videos from user's playlist.\r\n * send GET Request at /api/user/playlists/:playlistId\r\n * */\r\n\r\nexport const getVideosFromPlaylistHandler = function (schema, request) {\r\n  const user = requiresAuth.call(this, request);\r\n  if (user) {\r\n    const playlistId = request.params.playlistId;\r\n    const playlist = user.playlists.find((item) => item._id !== playlistId);\r\n    return new Response(200, {}, { playlist });\r\n  }\r\n  return new Response(\r\n    404,\r\n    {},\r\n    { errors: [\"The user you request does not exist. Not Found error.\"] }\r\n  );\r\n};\r\n\r\n/**\r\n * This handler handles adding videos from user's playlist.\r\n * send POST Request at /api/user/playlists/:playlistId\r\n * body contains {video}\r\n * */\r\n\r\nexport const addVideoToPlaylistHandler = function (schema, request) {\r\n  const user = requiresAuth.call(this, request);\r\n  if (user) {\r\n    const playlistId = request.params.playlistId;\r\n    const { video } = JSON.parse(request.requestBody);\r\n    const playlist = user.playlists.find((item) => item._id === playlistId);\r\n    if (playlist.videos.some((item) => item.id === video.id)) {\r\n      return new Response(\r\n        409,\r\n        {},\r\n        {\r\n          errors: [\"The video is already in your playlist\"],\r\n        }\r\n      );\r\n    }\r\n    playlist.videos.push(video);\r\n    return new Response(201, {}, { playlist });\r\n  }\r\n  return new Response(\r\n    404,\r\n    {},\r\n    { errors: [\"The user you request does not exist. Not Found error.\"] }\r\n  );\r\n};\r\n\r\n/**\r\n * This handler handles removing videos from user's playlist.\r\n * send DELETE Request at /api/user/playlists/:playlistId/:videoId\r\n * */\r\n\r\nexport const removeVideoFromPlaylistHandler = function (schema, request) {\r\n  const user = requiresAuth.call(this, request);\r\n  if (user) {\r\n    const playlistId = request.params.playlistId;\r\n    const videoId = request.params.videoId;\r\n    let playlist = user.playlists.find((item) => item._id === playlistId);\r\n    const filteredVideos = playlist.videos.filter(\r\n      (item) => item._id !== videoId\r\n    );\r\n    playlist.videos = filteredVideos;\r\n    return new Response(200, {}, { playlist });\r\n  }\r\n  return new Response(\r\n    404,\r\n    {},\r\n    { errors: [\"The user you request does not exist. Not Found error.\"] }\r\n  );\r\n};\r\n","import { v4 as uuid } from \"uuid\";\r\nimport { formatDate } from \"../utils/authUtils\";\r\n/**\r\n * User Database can be added here.\r\n * You can add default users of your wish with different attributes\r\n * Every user will have likes (Likes are set to 0 by default), History Array, Playlists Array (added Watch Later Playlist in it by default) by default\r\n * */\r\n\r\nexport const users = [\r\n  {\r\n    _id: uuid(),\r\n    firstName: \"Adarsh\",\r\n    lastName: \"Balika\",\r\n    email: \"adarshbalika@gmail.com\",\r\n    password: \"adarshBalika123\",\r\n    createdAt: formatDate(),\r\n    updatedAt: formatDate(),\r\n  },\r\n];\r\n","import { Server, Model, RestSerializer } from \"miragejs\";\r\nimport {\r\n  loginHandler,\r\n  signupHandler,\r\n} from \"./backend/controllers/AuthController\";\r\nimport {\r\n  getHistoryVideosHandler,\r\n  addVideoToHistoryHandler,\r\n  removeVideoFromHistoryHandler,\r\n  clearHistoryHandler,\r\n} from \"./backend/controllers/HistoryController\";\r\nimport {\r\n  getAllVideosHandler,\r\n  getVideoHandler,\r\n} from \"./backend/controllers/VideoController\";\r\nimport { videos } from \"./backend/db/videos\";\r\nimport { categories } from \"./backend/db/categories\";\r\nimport {\r\n  getAllCategoriesHandler,\r\n  getCategoryHandler,\r\n} from \"./backend/controllers/CategoryController\";\r\nimport {\r\n  getLikedVideosHandler,\r\n  addItemToLikedVideos,\r\n  removeItemFromLikedVideos,\r\n} from \"./backend/controllers/LikeController\";\r\nimport {\r\n  getAllPlaylistsHandler,\r\n  addNewPlaylistHandler,\r\n  removePlaylistHandler,\r\n  getVideosFromPlaylistHandler,\r\n  addVideoToPlaylistHandler,\r\n  removeVideoFromPlaylistHandler,\r\n} from \"./backend/controllers/PlaylistController\";\r\nimport { users } from \"./backend/db/users\";\r\nexport function makeServer({ environment = \"development\" } = {}) {\r\n  return new Server({\r\n    serializers: {\r\n      application: RestSerializer,\r\n    },\r\n    environment,\r\n    // TODO: Use Relationships to have named relational Data\r\n    models: {\r\n      video: Model,\r\n      category: Model,\r\n      user: Model,\r\n      like: Model,\r\n      history: Model,\r\n      playlist: Model,\r\n    },\r\n\r\n    // Runs on the start of the server\r\n    seeds(server) {\r\n      server.logging = false;\r\n      videos.forEach((item) => {\r\n        server.create(\"video\", { ...item });\r\n      });\r\n      categories.forEach((item) => server.create(\"category\", { ...item }));\r\n      users.forEach((item) =>\r\n        server.create(\"user\", {\r\n          ...item,\r\n          likes: [],\r\n          history: [],\r\n          playlists: [],\r\n        })\r\n      );\r\n    },\r\n\r\n    routes() {\r\n      this.namespace = \"api\";\r\n      // auth routes (public)\r\n      this.post(\"/auth/signup\", signupHandler.bind(this));\r\n      this.post(\"/auth/login\", loginHandler.bind(this));\r\n\r\n      // video routes (public)\r\n      this.get(\"/videos\", getAllVideosHandler.bind(this));\r\n      this.get(\"video/:videoId\", getVideoHandler.bind(this));\r\n\r\n      // TODO: POST VIDEO TO DB\r\n\r\n      // categories routes (public)\r\n      this.get(\"/categories\", getAllCategoriesHandler.bind(this));\r\n      this.get(\"/categories/:categoryId\", getCategoryHandler.bind(this));\r\n\r\n      // likes routes (private)\r\n      this.get(\"/user/likes\", getLikedVideosHandler.bind(this));\r\n      this.post(\"/user/likes\", addItemToLikedVideos.bind(this));\r\n      this.delete(\"/user/likes/:videoId\", removeItemFromLikedVideos.bind(this));\r\n\r\n      // playlist routes (private)\r\n      this.get(\"/user/playlists\", getAllPlaylistsHandler.bind(this));\r\n      this.post(\"/user/playlists\", addNewPlaylistHandler.bind(this));\r\n      this.delete(\r\n        \"/user/playlists/:playlistId\",\r\n        removePlaylistHandler.bind(this)\r\n      );\r\n\r\n      this.get(\r\n        \"/user/playlists/:playlistId\",\r\n        getVideosFromPlaylistHandler.bind(this)\r\n      );\r\n      this.post(\r\n        \"/user/playlists/:playlistId\",\r\n        addVideoToPlaylistHandler.bind(this)\r\n      );\r\n      this.delete(\r\n        \"/user/playlists/:playlistId/:videoId\",\r\n        removeVideoFromPlaylistHandler.bind(this)\r\n      );\r\n\r\n      // history routes (private)\r\n      this.get(\"/user/history\", getHistoryVideosHandler.bind(this));\r\n      this.post(\"/user/history\", addVideoToHistoryHandler.bind(this));\r\n      this.delete(\r\n        \"/user/history/:videoId\",\r\n        removeVideoFromHistoryHandler.bind(this)\r\n      );\r\n      this.delete(\"/user/history/all\", clearHistoryHandler.bind(this));\r\n    },\r\n  });\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { ExploreContextProvider } from \"./context/explore/ExploreContext\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { makeServer } from \"./server\";\r\nmakeServer();\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ExploreContextProvider>\r\n      <BrowserRouter>\r\n        <App />\r\n      </BrowserRouter>\r\n    </ExploreContextProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}